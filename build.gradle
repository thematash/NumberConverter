plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id "com.github.node-gradle.node" version "5.0.0"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

mainClassName = 'com.cflox.challenge.numberconverter.NumberConverterApp'

group 'com.cflox'
version '1.0'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

node {
    version = '18.16.0'
    download = true
    workDir = file("${project.projectDir}/src/main/frontend/nodejs")
    npmWorkDir = file("${project.projectDir}/src/main/frontend/npm")
    nodeModulesDir = file("${project.projectDir}/src/main/frontend")
}

processResources{
    dependsOn 'copyFrontendToBuild'
}

task npmInstallDependencies(type: NpmTask) {
    dependsOn 'npmSetup'
    execOverrides {
        it.ignoreExitValue = true
        it.workingDir = 'src/main/frontend'
    }
}

task npmBuild(type: NpmTask) {
    dependsOn 'npmInstallDependencies'
    execOverrides {
        it.workingDir = 'src/main/frontend'
    }
    args = ['run', 'build']
}

task copyFrontendToBuild(type: Copy) {
    dependsOn 'npmBuild'
    from "$projectDir/src/main/frontend/build/"
    into "$buildDir/resources/main/static"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.hsqldb:hsqldb'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
}